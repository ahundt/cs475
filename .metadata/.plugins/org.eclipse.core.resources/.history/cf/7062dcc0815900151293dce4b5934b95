package cs475;

import java.io.Serializable;
import java.util.Map;
import java.util.Set;
import java.util.Collection;
import java.util.HashMap;

public class FeatureVector<K,V> implements java.util.Map<K,V> {
	
	private Map<K,V> map;

	FeatureVector()
	{
		this.map = new HashMap<K,V>();
	}
	
	public void add(K index, V value) {
		this.map.put(index, value);
	}

// disabled because generic version is used instead
//	public double get(int index) {
//		return 0;
//	}

	public int size() {
		return this.map.size();
	}

	public boolean isEmpty() {
		return this.map.isEmpty();
	}

	public boolean containsKey(Object key) {
		return this.map.containsKey(key);
	}

	public boolean containsValue(Object value) {
		return this.map.containsValue(value);
	}

	public V get(Object key) {
		// TODO Auto-generated method stub
		return this.map.get(key);
	}

	public V put(K key, V value) {
		// TODO Auto-generated method stub
		return this.map.put(key, value);
	}

	public V remove(Object key) {
		// TODO Auto-generated method stub
		return this.map.remove(key);
	}

	public void putAll(Map<? extends K, ? extends V> m) {
		// TODO Auto-generated method stub
		map.putAll(m);
	}

	public void clear() {
		// TODO Auto-generated method stub
		map.clear();
	}

	public Set<K> keySet() {
		// TODO Auto-generated method stub
		return this.map.keySet();
	}

	public Collection<V> values() {
		// TODO Auto-generated method stub
		return this.map.values();
	}

	public Set<Map.Entry<K, V>> entrySet() {
		// TODO Auto-generated method stub
		return this.map.entrySet();
	}

}
